apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
  creationTimestamp: "2022-01-16T19:59:23Z"
  generation: 2
  labels:
    app: {{ .Values.appname }}
    app.kubernetes.io/component: {{ .Values.appname }}
    app.kubernetes.io/instance: {{ .Values.appname }}
    app.kubernetes.io/part-of: test2
  name: {{ .Values.appname }}
  namespace: cicd
  resourceVersion: "60140"
  uid: 90707ed6-dd0a-4b8c-9080-7d4958221c71
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    deploymentconfig: {{ .Values.appname }}
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        deploymentconfig: {{ .Values.appname }}
    spec:
      containers:
      - image: docker.io/kornkitti/express-hello-world
        imagePullPolicy: Always
        name: {{ .Values.appname }}
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: ConfigChange